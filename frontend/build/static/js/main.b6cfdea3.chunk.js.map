{"version":3,"sources":["Components/NavBar.js","Components/PostCard.js","Components/TitleList.js","Containers/Home.js","Components/PostForm.js","Components/NewPostDisp.js","Containers/actionTypes.js","Containers/actionCreators.js","Containers/NewPost.js","Components/Comment.js","Components/CommentBox.js","Components/DispPost.js","Containers/Post.js","Components/Routes.js","Components/Blog.js","App.js","serviceWorker.js","Containers/rootReducer.js","index.js"],"names":["NavBar","react_default","a","createElement","className","id","NavLink","to","Component","PostCard","style","Link","concat","this","props","title","description","TitleList","postList","post","blogPosts","singlePost","push","Components_PostCard","Home","Components_TitleList","connectedComponent","connect","state","PostForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","body","handleChange","bind","assertThisInitialized","handleSubmit","handleCancel","evt","setState","defineProperty","target","name","value","isEdit","handleShowEditForm","history","preventDefault","uuid","comments","editOrNew","handlePost","onSubmit","method","htmlFor","type","onChange","onClick","defaultProps","NewPostDisp","Components_PostForm","assign","ADD_COMMENT","DELETE_COMMENT","HANDLE_POST","postType","newPost","newId","NewPost","Components_NewPostDisp","Comment","handleDeleteComment","deleteComment","postId","text","CommentBox","handleAddComment","newComment","addComment","_this2","commentList","map","comment","src_Components_Comment","action","DispPost","isEditing","toShow","Components_CommentBox","Post","src_Components_DispPost","match","params","toString","commentId","Routes","Switch","Route","exact","path","render","Containers_Home","Containers_NewPost","routerProps","Containers_Post","Redirect","Blog","isLoading","src_Components_NavBar","Components_Routes","App","Components_Blog","Boolean","window","location","hostname","rootReducer","newState","arguments","length","undefined","1","2","console","log","objectSpread","newComments","filter","e","store","createStore","compose","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6cfdea3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './NavBar.css'\nclass NavBar extends Component {\n  render() {\n    \n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n                <div>\n                    MicroBlog\n                    <br></br>\n                    Get in the Rithm of blogging!\n                    <br></br>\n                </div>\n                <div>\n                    <NavLink to=\"/\"><b>Blog</b></NavLink>\n                    <NavLink to=\"/new\">Add a new post</NavLink>\n                </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass PostCard extends Component {\n\n  render() {\n    let style = {};\n    \n    return (\n      <div className=\"PostCard card\" style={style}>\n        <div className=\"card-body\">\n          <Link to={`/${this.props.id}`}><h5 className=\"card-title\">{this.props.title}</h5></Link>\n          <p className=\"card-text\">{this.props.description}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostCard;\n","import React, { Component } from 'react';\nimport PostCard from './PostCard'\n\nclass TitleList extends Component {\n  \n  render() {\n    let postList=[];\n\n    for(let post in this.props.blogPosts){\n        let singlePost = this.props.blogPosts[post]\n        postList.push(<PostCard title={singlePost.title} description={singlePost.description} id={singlePost.id}/>)\n    }\n    \n    return (\n      <div className=\"TitleList\">\n       {postList}\n      </div>\n    );\n  }\n}\n\nexport default TitleList;","import React, { Component } from 'react';\nimport TitleList from '../Components/TitleList'\nimport {connect} from 'react-redux'\n\nclass Home extends Component {\n  render() {\n   \n    return (\n      <div className=\"Home\">\n       Welcome to <b>Microblog</b>\n       <TitleList blogPosts={this.props.blogPosts} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {blogPosts:state.blogPosts}\n}\n\nconst connectedComponent = connect(mapStateToProps);\n\nexport default connectedComponent(Home);","import React, { Component } from 'react';\nimport uuid from 'uuid/v4';\n\nclass PostForm extends Component {\n  static defaultProps = {\n    post: { title: '', description: '', body: '', comments: [] }\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.post.title,\n      description: this.props.post.description,\n      body: this.props.post.body\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  //changes state whenever search value is changed.\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleCancel(){\n    if(this.props.isEdit){\n      this.props.handleShowEditForm()\n      this.props.history.push(`/${this.props.post.id}`)\n    } else{\n      this.props.history.push(`/`)\n    }\n  }\n\n  async handleSubmit(evt) {\n    evt.preventDefault();\n    let post = {\n      id: this.props.post.id || uuid(),\n      title: this.state.title,\n      description: this.state.description,\n      body: this.state.body,\n      comments: this.props.post.comments\n    };\n\n    let editOrNew = this.props.isEdit ? 'Edit':'New';\n    \n    this.props.handlePost(post, editOrNew);\n\n    this.setState({\n      title: '',\n      description: '',\n      body: ''\n    });\n\n    if(this.props.isEdit){\n        this.props.handleShowEditForm()\n        this.props.history.push(`/${post.id}`) \n    } else{\n        this.props.history.push(`/`)\n    }\n  }\n\n  render() {\n    let title = this.props.isEdit ? 'Edit Post':'New Post';\n\n    return (\n      <div className=\"PostForm\">\n        {title}\n        <form onSubmit={this.handleSubmit} method=\"get\">\n          <label htmlFor=\"postform-title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"postform-title\"\n            name=\"title\"\n            onChange={this.handleChange}\n            value={this.state.title}\n          />\n          <label htmlFor=\"postform-description\">Description:</label>\n          <input\n            type=\"text\"\n            id=\"postform-description\"\n            name=\"description\"\n            onChange={this.handleChange}\n            value={this.state.description}\n          />\n          <label htmlFor=\"postform-body\">Body:</label>\n          <input\n            type=\"text\"\n            id=\"postform-body\"\n            name=\"body\"\n            onChange={this.handleChange}\n            value={this.state.body}\n          />\n          <button>{title}</button>\n        </form>\n        <button onClick={this.handleCancel}>Cancel</button>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React, { Component } from 'react';\nimport PostForm from './PostForm';\n\nclass NewPostDisp extends Component {\n\n  render() {\n      \n    return <div className=\"PostCard card\">\n                <PostForm {...this.props} isEdit={false}/>\n            </div>;\n  }\n}\n\nexport default NewPostDisp;\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const HANDLE_POST = 'HANDLE_POST';\n","import { ADD_COMMENT, DELETE_COMMENT, HANDLE_POST } from './actionTypes';\n\nexport function addComment(postId, comment) {\n  return { type: ADD_COMMENT, postId, comment };\n}\n\nexport function deleteComment(postId, commentId) {\n  return { type: DELETE_COMMENT, postId, commentId };\n}\n\nexport function handlePost(post, postType) {\n\n  let newPost;\n  \n  if (postType === 'New') {\n    let newId = post.id;\n    newPost = { [newId]: post };\n  } else if (postType === 'Edit') {\n    newPost = { [post.id]: post };\n\n  }\n\n  return { type: HANDLE_POST, newPost};\n}\n","import React, { Component } from 'react';\nimport NewPostDisp from '../Components/NewPostDisp';\nimport {connect} from 'react-redux'\nimport {handlePost} from './actionCreators'\n\n\nclass NewPost extends Component {\n\n  render() {\n   \n    return (\n      <div className=\"NewPost\">\n        <NewPostDisp {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default connect(null,{handlePost})(NewPost)\n","import React, { Component } from 'react';\nimport './Comment.css'\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteComment = this.handleDeleteComment.bind(this);\n  }\n  \n  handleDeleteComment(evt) {\n    evt.preventDefault();\n    this.props.deleteComment(this.props.postId, this.props.id);\n  }\n\n\n  render() {\n    return (\n      <div className=\"Comment card\">\n        <button\n          onClick={this.handleDeleteComment}\n          className=\"delete-comment-button\"\n        >\n          X\n        </button>\n       <p> {this.props.text}</p>\n\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","import React, { Component } from 'react';\nimport Comment from './Comment';\nimport uuid from 'uuid/v4'\n\nclass CommentBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: '',id:'' };\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleAddComment(evt) {\n    evt.preventDefault();\n    let newComment = this.state\n    newComment.id=uuid()\n    this.props.addComment(this.props.postId, newComment);\n    this.setState({ text: '' });\n  }\n\n  render() {\n    let commentList = this.props.comments.map(comment => (\n      <Comment\n        id={comment.id}\n        text={comment.text}\n        deleteComment={this.props.deleteComment}\n        postId={this.props.postId}\n      />\n    ));\n    return (\n      <div className=\"CommentBox card\">\n        {commentList}\n        <form action=\"\" onSubmit={this.handleAddComment}>\n          <label htmlFor=\"addcomment-form\">Add Comment</label>\n          <input\n            id=\"addcomment-text\"\n            type=\"text\"\n            name=\"text\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>Submit Comment!</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CommentBox;\n","import React, { Component } from 'react';\nimport PostForm from './PostForm';\nimport CommentBox from './CommentBox';\nimport './DispPost.css'\n\nclass DispPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isEditing: false };\n    this.handleShowEditForm = this.handleShowEditForm.bind(this);\n  }\n\n  handleShowEditForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  render() {\n\n    let post = this.props.post;\n\n    let toShow;\n\n    if (this.state.isEditing) {\n      toShow = <PostForm {...this.props} isEdit={true} handleShowEditForm={this.handleShowEditForm}/>;\n    } else {\n      toShow = (\n        <div className=\"card-body\">\n          <div className='card-head'>\n            <h5 className=\"card-title\">{post.title}</h5>\n            <button onClick={this.handleShowEditForm}> Edit </button>\n          </div>\n            <div>\n              <p className=\"card-text desc\">{post.description}</p>\n            </div>\n            <br/>\n            <div>\n              <p className=\"card-text body\">{post.body}</p>\n            </div>\n            <br/>\n            <CommentBox\n              comments={post.comments}\n              deleteComment={this.props.deleteComment}\n              postId={post.id}\n              addComment={this.props.addComment}\n            />\n        </div>\n      );\n    }\n\n    return <div className=\"PostCard card\">{toShow}</div>;\n  }\n}\n\nexport default DispPost;\n","import React, { Component } from 'react';\nimport DispPost from '../Components/DispPost';\nimport { connect } from 'react-redux';\nimport { addComment,deleteComment,handlePost } from './actionCreators';\n\n\nclass Post extends Component {\n  render() {\n\n    return <div>\n            <DispPost {...this.props}/>\n          </div>\n  }\n}\n\nfunction mapStateToProps(state,props){\n  return { post:state.blogPosts[props.match.params.id.toString()], }\n}\n\nexport default connect(mapStateToProps, {addComment,deleteComment,handlePost} )(Post)\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Home from '../Containers/Home';\nimport NewPost from '../Containers/NewPost';\nimport Post from '../Containers/Post';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"Routes\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => <Home />}\n          />\n\n          <Route\n            exact\n            path=\"/new\"\n            render={props => (\n              <NewPost\n                {...props}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/:id\"\n            render={routerProps => (\n              <Post\n                {...routerProps}\n              />\n            )}\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Routes from './Routes';\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    if (this.state.isLoading === true) {\n      return <h1>Loading...</h1>;\n    }\n\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Routes\n        \n        />\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","import React, { Component } from 'react';\nimport Blog from './Components/Blog';\nimport './App.css';\n\n\nclass App extends Component {\n\n\n  render() {\n   \n    return (\n      <div className=\"App\">\n        <Blog  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_COMMENT, DELETE_COMMENT, HANDLE_POST } from './actionTypes';\n\nfunction rootReducer(state = {  blogPosts: {\n  '1':{\n    id: '1',\n    title: 'I like pasta',\n    description: 'How much I love pasta',\n    body: `Delicious pasta sorprese al dente, pasta sauce capellini cavatelli ravioli sauce tortellini spaghettini. Spaghetti tortellini ziti fettuccine, ravioli rotelle fettuccine tortellini tomatoes tomatoes sauce basil. Rotelle rotelle rotelle, pasta ziti lasagna pasta macaroni lasagna cavatelli sauce.\n    Lasagna vermicelli al dente cheesy spaghetti ziti, spaghettini angel hair fiorentine sorprese sorprese. Anelli ditalini fettuccine ditalini cheesy fiorentine cheesy, sauce cheesy ravioli pasta tripoline. Tripoline tomatoes spaghettini tomatoes sauce fiorentine, linguini basil anelli penne rotelle. Angel hair carbonara angel hair, sorprese ditalini macaroni al dente ziti tripoline cavatelli. Macaroni al dente cavatelli lasagna fiorentine rotelle rotelle tortellini.`,\n    comments: [{id: 1, text: 'Well done, sir!'}]\n  },\n  '2': {\n    id: '2',\n    title: '10 Ways To Eat Amazing Pasta',\n    description: 'Eat Amazing Pasta in 10 Ways',\n    body: `Carbonara basil spaghettini cavatelli al dente sorprese fiorentine capellini. Fettuccine tripoline rotelle cheesy penne spaghettini fettuccine spaghettini capellini, cavatelli capellini spaghettini carbonara. Cavatelli angel hair al dente tortellini basil, tomatoes lasagna delicious macaroni fettuccine lasagna carbonara.\n\n    Delicious tortellini anelli vermicelli al dente, cavatelli tortellini rotelle delicious carbonara ditalini capellini penne cheesy. Fettuccine sauce al dente, fettuccine angel hair cheesy fiorentine anelli angel hair sauce. Carbonara delicious basil cheesy anelli sorprese tomatoes sorprese, pasta al dente lasagna sauce carbonara penne.`,\n    comments: [\n      { id: 1, text: 'this site sux' },\n      { id: 2, text: 'screw u bro' },\n      { id: 3, text: 'i hate the internet' }\n    ]\n  }\n}},action) {\n\n  console.log('reducer ran; state & action:', state, action);\n\n  let newState;\n\n  switch (action.type) {\n    case HANDLE_POST:\n      return {blogPosts:{...state.blogPosts, ...action.newPost}};\n    \n    case DELETE_COMMENT:\n      let newPost = state.blogPosts[action.postId] \n      let newComments = newPost.comments.filter(e=>e.id!==action.commentId)\n      newPost.comments = newComments\n      return {blogPosts:{...state.blogPosts,[newPost.id]:{...newPost}}};\n\n    case ADD_COMMENT:\n      newState = {...state.blogPosts}  \n      newState[action.postId].comments.push(action.comment)\n      return {blogPosts:{...newState}};\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './Containers/rootReducer';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}